# Helsingborg Stad CircleCI Build Config
#
# Supported Build process: Dockerized NodeJS Apps deployed on Heroku
#
# -- TESTS --
#
# This build config will make a basic warmup of the docker. It's up
# to the application itself to run the required tests to validate
# the functionality. This build will fail if any error message is thrown.
#
# -- SETUP --
# You need to get the following steps done before this build will complete.
#
# 1. Create a git repository.
# 2. Link the git repository to circle ci
# 3. Go to "Checkout SSH keys in circleci"
# 4. Add new checkout key and verify account access 
# 5. Create a heroku container repository
# 6. Enable deploy via status api on heroku
# 7. Push branch to github
#
# More detailed information on how to complete this and enviroment
# variables can be found in internal confluence documentation.
#
# -- AUTHORS --
#
# Sebastian Thulin (sebastian.thulin@helsingborg.se)
#
version: 2.1

defaults: &defaults
    working_directory: ~/application
    docker:
        - image: circleci/node:12.3.1

jobs:

    lint:
        <<: *defaults  
        steps:
            # Check out the code in the project directory.
            - checkout

            - restore_cache:
                key: lint-v1-{{ checksum "package.json" }}-{{ arch }}

            - run: 
                name: Install depencencys
                command: npm install

            - save_cache:
                key: lint-v1-{{ checksum "package.json" }}-{{ arch }}
                paths:
                    - node_modules

            - run:
                name: Running eslint
                command: mkdir -p test-results/eslint && npm run lint
                when: always

            # Persist temporary files (stored up to 30 days).
            - persist_to_workspace:
                root: ~/application
                paths:
                    - node_modules

            - store_test_results:
                path: test-results/eslint

            - store_artifacts:
                path: test-results/eslint

    unit:
        <<: *defaults  
        steps:
            # Check out the code in the project directory.
            - checkout

            - restore_cache:
                key: unit-v1-{{ checksum "package.json" }}-{{ arch }}

            - run: 
                name: Install depencencys
                command: npm install

            - save_cache:
                key: node-v1-{{ checksum "package.json" }}-{{ arch }}
                paths:
                    - node_modules

            - run:
                name: Run application tests (mocha)
                command: |
                    mkdir -p test-results/unit
                    npm run test

            # Persist temporary files (stored up to 30 days).
            - persist_to_workspace:
                root: ~/application
                paths:
                    - node_modules

            # Store logs.
            - store_test_results:
                path: test-results/unit

            # Store artifacts (example logs, binaries, etc).
            - store_artifacts:
                path: test-results/unit

    publish:
        <<: *defaults
        steps:
            - checkout

            - run:
                name: Bump npm package version [release]
                command: |
                    git config user.name "CircleCI bot"
                    git config user.email "circleci@circleci"
                    npm version minor -m "Bumped version number to %s [skip ci]"
                    git push origin HEAD:master
            
            - run:
                name: Set registry URL
                command: npm set @helsingborg-stad:registry https://npm.pkg.github.com
            - run:
                name: Authenticate with registry
                command: |
                    echo "@helsingborg-stad:registry=https://npm.pkg.github.com/" > ~/application/.npmrc
                    echo "//npm.pkg.github.com/:_authToken=\"$github_pkgs_Token\"" >> ~/application/.npmrc
            - run:
                name: Publish package
                command: npm publish


workflows:
    version: 2
    build-master:
        jobs:
            - unit:
                filters:
                    branches:
                        only:
                            - master
                            - develop 
                            - /feature.*/
            - lint:
                filters:
                    branches:
                        only:
                            - master
                            - develop 
                            - /feature.*/
            - publish:
                filters:
                    branches:
                        only:
                            - master
                requires:
                    - lint
                    - unit